---
title: Geographic Market Insights
author: Julian Winternheimer
date: '2022-05-10'
slug: []
categories: []
tags: []
---

Hello. The purpose of this analysis is to gain a better understanding of Bufferâ€™s customer penetration in various countries and regions around the world. We would like to learn what markets we are doing well in and which have room for improvement. 

This analysis should help guide budget allocation decisions related to paid marketing by country and capture insights to guide our "market prioritization" framework for market development/expansion and penetration efforts.

**As of May 11, we're missing some data in the `fivetran_mixpanel.people` dataset. Because of this, I've mostly used proportions rather than counts in this analysis. 

**A key assumption made in this analysis is that the data is missing _at random_, and that the sample of data we do have is representative of the population.


## Summary
When we consider signups, usage, and paid conversions, Buffer's core markets are the US, UK, Canada, Australia, and possibly France. 

Buffer gets a lot of signups and usage from India, but relatively few paid conversions. It seems like there is an opportunity here given India's size and usage of Buffer. Brazil is another country with a low paid conversion rate that contributes a relatively large number of signups.

Countries that have high conversion rates but relatively low signup numbers include New Zealand, Ireland, Colombia, Australia, and Switzerland.

Given that many citizens of European countries speak English, I'd recommend exploring translating site content into Spanish and French. This could help us expand into markets with existing demand but relatively low conversion rates like the Philippines.

It might also be worth targeting countries with high conversion rates and lower signup numbers like Australia, New Zealand, and Ireland.

___
 
```{r include = FALSE, message = FALSE, warning = FALSE}
# load libraries
library(buffer)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(forcats)
library(ggplot2)
library(scales)
library(tidytext)
```
 

## Data Collection
We'll collect the country codes from all signups, monthly active users, and new customers from the past 30 days.

```{r include = FALSE, eval = FALSE}
# sql
sql <- "
  select distinct
    s.id as sub_id
    , s.customer_id
    , s.plan_id
    , p.interval
    , p.amount / 100 as plan_amount
    , case when p.interval = 'year' then p.amount / 1200 else p.amount / 100 end as   monthly_amount
    , coalesce(c.country, pm.card_country) as country
  from dbt_buffer.stripe_paid_subscriptions as s
  left join dbt_buffer.stripe_plans as p
    on p.id = s.plan_id
  left join dbt_buffer.stripe_cards as c
    on c.customer_id = s.customer_id
  left join segment_stripe.payment_method as pm
    on pm.customer_id = s.customer_id
  where s.status in ('active', 'past_due')
"

# get data
mrr <- bq_query(sql = sql)

# save data
saveRDS(mrr, "mrr_by_country.rds")
```

```{r include = FALSE, warning = FALSE, message = FALSE, eval = FALSE}
# read signups data https://mixpanel.com/s/3w3ixt
signups <- read_csv("~/Desktop/signups2.csv")

# update names
names(signups) <- c("event", "trial", "country", "users")

# remove column
signups$event <- NULL

# save data as rds object
saveRDS(signups, "signups_by_country.rds")
```

```{r include = FALSE, warning = FALSE, message = FALSE, eval = FALSE}
# read mau data https://mixpanel.com/s/31gcwE
mau <- read_csv("~/Desktop/mau.csv")

# update names
names(mau) <- c("event", "country", "users")

# remove column
mau$event <- NULL

# save data as rds object
saveRDS(mau, "mau_by_country.rds")
```

```{r include = FALSE, warning = FALSE, message = FALSE, eval = FALSE}
# read conversions data https://mixpanel.com/s/2E8Zgx
conversions <- read_csv("~/Desktop/conversions.csv")

# update names
names(conversions) <- c("event", "country", "users")

# remove column
conversions$event <- NULL

# save data as rds object
saveRDS(conversions, "conversions_by_country.rds")
```

```{r include = FALSE, warning = FALSE, message = FALSE, eval = FALSE}
# read conversion rates
conversion_rates <- read_csv("~/Desktop/conversion_rates.csv")

# update names
names(conversion_rates) <- c("country", "signups", "conversions")

# calc rate
conversion_rates <- conversion_rates %>% 
  mutate(rate = conversions / signups)

# save data as rds object
saveRDS(conversion_rates, "conversion_rates_by_country.rds")
```

```{r include = FALSE, warning = FALSE, message = FALSE, eval = FALSE}
# read activation rates
activation <- read_csv("~/Desktop/activation.csv")

# update names
names(activation) <- c("country", "signups", "activations")

# calc rate
activation <- activation %>% 
  mutate(rate = activations / signups)

# save data as rds object
saveRDS(activation, "activation_by_country.rds")
```


```{r include = FALSE}
# read data
signups <- readRDS("signups_by_country.rds")
mau <- readRDS("mau_by_country.rds")
conversions <- readRDS("conversions_by_country.rds")
conversion_rates <- readRDS("conversion_rates_by_country.rds")
activation <- readRDS("activation_by_country.rds")
mrr <- readRDS("mrr_by_country.rds")
```

## Signups By Country
First we'll look at which countries drive the most signups. We exclude users for which no geographical data is available.

The United States, India, the UK, France, and Canada are the largest contributors to signups.  

```{r echo = FALSE, message = FALSE, warning = FALSE}
# plot top for all signups
signups %>% 
  filter(!is.na(country)) %>% 
  group_by(country) %>% 
  summarise(total = sum(users)) %>% 
  arrange(desc(total)) %>% 
  head(20) %>% 
  mutate(country = reorder(country, total)) %>% 
  buffplot(aes(x = country, y = total)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_continuous(labels = comma) +
  labs(x = NULL, y = "Signups",
       subtitle = "Signups By Country")
```

If we only look at signups for which the `createdWithTrial` property is present -- we started tracking this on March 1, 2022 -- then Bangladesh and the Philippines join the top 6.

```{r echo = FALSE, warning = FALSE, message = FALSE}
signups %>% 
  filter(!is.na(country) & !is.na(trial)) %>% 
  group_by(trial) %>% 
  arrange(desc(users)) %>% 
  filter(row_number() <= 20) %>% 
  mutate(prop = users / sum(users)) %>% 
  buffplot(aes(y = reorder_within(country, prop, trial), 
             x = prop, 
             fill = trial)) +
  geom_col(show.legend = T) + 
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_reordered() + 
  facet_wrap(~trial, ncol = 2, scales = "free") + 
  labs(x = "% of Signups",
       y = NULL,
       fill = "With Trial")
```

## Monthly Active Users By Country
The United States, Great Britain, Canada, India, and France are the largest contributors to Buffer's monthly active users.

```{r echo = FALSE, message = FALSE, warning = FALSE}
# plot top countries
mau %>% 
  filter(!is.na(country)) %>% 
  mutate(prop = users / sum(users)) %>% 
  mutate(country = reorder(country, prop)) %>% 
  arrange(desc(prop)) %>% 
  head(20) %>% 
  buffplot(aes(x = country, y = prop)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_continuous(labels = percent) +
  labs(x = NULL, y = "% of Monthly Active Users")
```

## Paid Conversions By Country
The United States, the UK, Canada, Australia, France, and Germany are the largest contributors to paid conversions since the beginning of 2022.

```{r echo = FALSE, warning = FALSE, message = FALSE}
# plot top countries
conversions %>% 
  filter(!is.na(country)) %>% 
  mutate(prop = users / sum(users)) %>% 
  mutate(country = reorder(country, prop)) %>% 
  arrange(desc(prop)) %>% 
  head(20) %>% 
  buffplot(aes(x = country, y = prop)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_continuous(labels = percent) +
  labs(x = NULL, y = "% of Paid Conversions")
```

## Paid Conversion Rates
Next we'll calculate the proportion of signups that started a paid Stripe subscription within 30 days.

Colombia, Canada, the US, Australia, and the UK have the highest proportion of signups that convert to paying plans within 30 days of signing up. 

```{r echo = FALSE, warning = FALSE, message = FALSE}
# plot top
conversion_rates %>% 
  filter(!is.na(country) & signups > 500) %>% 
  arrange(desc(rate)) %>% 
  head(20) %>% 
  mutate(country = reorder(country, rate)) %>% 
  buffplot(aes(x = country, y = rate)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_continuous(labels = percent) +
  labs(x = NULL, y = "Paid Conversion Rate")
```

## Activation Rates
We'll take the same approach to looking at activation rates. We only include countries that have contributed at least 500 signups. 

The UK, Netherlands, Australia, Canada, and Japan have the highest activation rates.

```{r echo = FALSE, warning = FALSE, message = FALSE}
# plot top
activation %>% 
  filter(!is.na(country) & signups > 500) %>% 
  arrange(desc(rate)) %>% 
  head(20) %>% 
  mutate(country = reorder(country, rate)) %>% 
  buffplot(aes(x = country, y = rate)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_continuous(labels = percent) +
  labs(x = NULL, y = "Activation Rate")
```

## Market Opportunities
The plot 

```{r echo = FALSE, warning = FALSE, message = FALSE}
# get proportion of signups
signup_prop <- signups %>% 
  filter(!is.na(country)) %>% 
  group_by(country) %>% 
  summarise(signups = sum(users)) %>% 
  mutate(prop_signups = signups / sum(signups))

# get proportion of conversions
conversion_prop <- conversions %>% 
  filter(!is.na(country)) %>% 
  rename(conversions = users) %>% 
  mutate(prop_conversions = conversions / sum(conversions))

# join data
props <- signup_prop %>% 
  left_join(conversion_prop, by = "country")

# plot top
props %>% 
  filter(signups > 500) %>% 
  ggplot(aes(x = prop_signups, 
             y = prop_conversions, 
             label = country, 
             color = country)) +
  geom_point(position = "jitter") +
  geom_text(check_overlap = T,
            nudge_x = 0.1, 
            nudge_y = 0.1) +
  theme_minimal() +
  theme(legend.position = "none") +
  stat_function(fun = function(x) x * 1, color = "red", linetype = 2) +
  scale_x_continuous(trans = 'log2', labels = percent) +
  scale_y_continuous(trans='log2', labels = percent) +
  labs(x = "Proportion of Signups (log2)", y = "Proportion of Conversions (log2)",
       title = "Proportion of Signups and Conversions by Country")
```

Another (possibly dubious) approach we could take is to create a custom metric that combines the proportion of signups (`prop_signups`) and the proportion of conversions (`prop_conversions`). 

The metric can be simple -- if we want to identify countries with relatively high conversion rates that don't make up a large proportion of signups, we can divide `prop_conversions` by `prop_signup`, which effectively penalizes countries that already make up a large proportion of signups.

These are the countries that have the highest values of the resulting metric. The US, Australia, New Zealand, Ireland, Switzerland, and Canada lead the pack if we go by this metric.

```{r echo = FALSE, warning = FALSE, message = FALSE}
# plot top
props %>% 
  filter(signups > 500) %>% 
  mutate(custom = prop_conversions / prop_signups,
         country = reorder(country, custom)) %>% 
  arrange(desc(custom)) %>% 
  head(20) %>% 
  buffplot(aes(x = country, y = custom)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  labs(x = NULL, y = "Prop Conversions / Prop Signups")
```


## MRR by Country
The MRR amounts used to generate the plot below are estimates based on plan values and exclude any and all discounts.

The US contributes the most to MRR by far, followed by the UK, Canada, Australia, and Germany. 

```{r echo = FALSE, warning = FALSE, message = FALSE}
# plot mrr by country
mrr %>% 
  group_by(country) %>% 
  summarise(total_mrr = sum(monthly_amount, na.rm = T)) %>% 
  mutate(country = reorder(country, total_mrr)) %>% 
  arrange(desc(total_mrr)) %>% 
  head(20) %>% 
  buffplot(aes(x = country, y = total_mrr)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  theme(
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(),
        panel.grid.minor.x = element_line(color = "grey80")
      ) +
  scale_y_continuous(labels = dollar) +
  labs(x = NULL, y = "Total MRR")
```


